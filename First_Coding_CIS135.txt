# UNA 1st EchoBot
print("Let's talk! Enter 'quit' to quit..")

while True:
   user = input("You: ")
   print(f"Bot: {user}")
   if user == 'quit':
      break



# Fahrenheit to Celsuis Converter

def ftoc(f):
   c = (f-32) * 5/9
   return c
   
   
temp = float(input("Enter temperature in Fahrenheit"))
celsius = ftoc(temp)

print (f"{temp} in Fahrenheit is {celsius} in celius")



#Guess the Number
import random

max_num = 1000
random_number = random.randint(1, max_num)
guess = 0
while guess != random_number:
   guess = int(input(f"Guess a number between 1 & {max_num}: "))
   if guess < random_number:
      print("Wrong! Too low...")
   elif guess > random_number:
      print("Guess again! Too high...")
print(f"That's right! The random number is {random_number}")



#Dice Roller
import random

#Intitializing a while loop
while True:
   print("Rolling dice 1...")
   print("Rolling dice 2...")

   #Using random.randint(1,6) & (1,12) to generate a random value
   print (f"The value of dice 1 is ", random.randint(1,6))
   print (f"The value of dice 2 is ", random.randint(1,12))
   
   #Ask user to roll dice again or quit
   repeat = input ("Roll dice again? y/n")
   
   #If user picks 'n' quit
   if repeat == 'n':
      break



# Password Generator
import random

#Ask user for the length of password for generation
pass_len = int(input("Enter the length of your password: "))

#Character and symbols to generate password
pass_data = "qwertyuiop[]asdfghjkl;'zxcvbnm,./1234567890QWERTYUIOPASDFGHJKLZXCVBNM"
#Using random.sample() to collect random data from pass_data as a list
#and using .join() to join the list elements to form a string
password = "".join(random.sample(pass_data, pass_len))

print (password)



# Rock, Paper, Scissors
import random

def rock_paper_scissors():
   player = input("What is your choice? 'R' - Rock, 'P' - Paper, 'S' - Scissors")
   choices = ['R','P', 'S']
   opponent = random.choice(choices)
   
   if player == opponent:
      return print(f"It's a tie! Choice is {opponent}")
        
   if check_win (player, opponent):
      return print (f"You win!")
   
   if check_win(player, opponent) !=True:
     return print (f"You lose! Choice is {opponent}")
     
def check_win(user, computer):
   if (user=='R' and computer =='S') or (user == 'S' and computer == 'R') or (user=='P' and computer=='S'):
     return True

rock_paper_scissors()





#Grady's Calculator
import math

def addition(a, b):
    return a + b

def subtraction(a, b):
    return a - b

def multiplication(a, b):
    return a * b

def division(a, b):
    if b == 0:
        return "Cannot divide by zero"
    return a / b

while True:
    print("Welcome to the Advanced Calculator")
    print("Choose an operation:")
    print("1. Addition (+)")
    print("2. Subtraction (-)")
    print("3. Multiplication (*)")
    print("4. Division (/)")
    print("5. Exponent (^)")
    print("6. Sine (sin)")
    print("7. Cosine (cos)")
    print("8. Square Root (sqrt)")
    print("9. Quit (q)")

    choice = input("Enter the number of your choice: ")

    if choice == "q":
        break

    if choice in ["1", "2", "3", "4", "5", "6", "7", "8"]:
        try:
            x = float(input("Enter the first number: "))
            if choice in ["5", "6", "7", "8"]:
                if choice == "5":
                    operator = "^"
                    y = float(input("Enter the exponent: "))
                    value = math.pow(x, y)
                elif choice == "6":
                    operator = "sin"
                    value = math.sin(x)
                elif choice == "7":
                    operator = "cos"
                    value = math.cos(x)
                elif choice == "8":
                    operator = "sqrt"
                    value = math.sqrt(x)
                    print(f"sqrt({x}) = {value}")  # Fixed print statement for Square Root
                else:
                    y = float(input("Enter the second number: "))
                    if choice == "1":
                        operator = "+"
                        value = addition(x, y)
                    elif choice == "2":
                        operator = "-"
                        value = subtraction(x, y)
                    elif choice == "3":
                        operator = "*"
                        value = multiplication(x, y)
                    elif choice == "4":
                        operator = "/"
                        value = division(x, y)
                print(f"{x} {operator} {y} = {value}")  # Updated print statement
            except ValueError:
                print("Please enter valid numeric values.")
        else:
            print("Invalid choice. Please select a valid operation (1-8) or 'q' to exit.")

print("Thank you for using Grady's Calculator. Have a great day!")




#Advanced Calculator
import math

def addition(a, b):
    return a + b

def subtraction(a, b):
    return a - b

def multiplication(a, b):
    return a * b

def division(a, b):
    if b == 0:
        return "Cannot divide by zero"
    return a / b

def square_root(a):
    if a < 0:
        return complex(0, math.sqrt(abs(a)))
    return math.sqrt(a)

def absolute_value(a):
    return abs(a)

def exponential(a, b):
    return a ** b

while True:
    print("Welcome to the Advanced Calculator")
    print("Choose an operation:")
    print("1. Addition (+)")
    print("2. Subtraction (-)")
    print("3. Multiplication (*)")
    print("4. Division (/)")
    print("5. Square Root (√)")
    print("6. Absolute Value (|x|)")
    print("7. Exponential (x^y)")
    print("8. Quit (q)")

    choice = input("Enter the number of your choice: ")

    if choice == "q":
        break

    if choice in ["1", "2", "3", "4"]:
        try:
            x = float(input("Enter the first number: "))
            y = float(input("Enter the second number: "))
            
            if choice == "1":
                value = addition(x, y)
                operator = "+"
            elif choice == "2":
                value = subtraction(x, y)
                operator = "-"
            elif choice == "3":
                value = multiplication(x, y)
                operator = "*"
            elif choice == "4":
                value = division(x, y)
                operator = "/"
            
            print(f"{x} {operator} {y} = {value}")
        except ValueError:
            print("Please enter valid numeric values.")
    elif choice == "5":
        try:
            x = float(input("Enter the number: "))
            value = square_root(x)
            operator = "√"
            if isinstance(value, complex):
                print(f"{operator} {x} = {value.real:.2f} + {value.imag:.2f}i")
            else:
                print(f"{operator} {x} = {value:.2f}")
        except ValueError:
            print("Please enter a valid numeric value.")
    elif choice == "6":
        try:
            x = float(input("Enter the number: "))
            value = absolute_value(x)
            operator = "|x|"
            print(f"{operator} {x} = {value:.2f}")
        except ValueError:
            print("Please enter a valid numeric value.")
    elif choice == "7":
        try:
            x = float(input("Enter the base (x): "))
            y = float(input("Enter the exponent (y): "))
            value = exponential(x, y)
            operator = "^"
            print(f"{x} {operator} {y} = {value:.2f}")
        except ValueError:
            print("Please enter valid numeric values.")
    else:
        print("Invalid choice. Please select a valid operation (1-7) or 'q' to exit.")

print("Thank you for using the Advanced Calculator. Have a great day!")



#Simple Starter Line Graph
import matplotlib.pyplot as plt

#Data
x1 = [1,2,3]
y1 = [2,4,1]

#Plot x1
plt.plot(x1,y1, label="Line 1")

#Data #2
x2 = [1,2,3]
y2 = [1,4,3]

#Plot x2
plt.plot(x2,y2, label="Line 2")

#Labeling Axis
plt.xlabel("Expenses")
plt.ylabel("Purchases")

#Show Legend
plt.legend ()

plt.show ()



#Colorful Beginner Plot
import matplotlib.pyplot as plt

x = [1,2,3,4,5,6]
y = [2,3,1,5,2,6]

plt.plot(x, y, color="green", linestyle="dashed", linewidth=1,
marker='*', markerfacecolor='red', markersize=10)

plt.text(2,5,"Nordic Nonsense")

plt.xlabel("X-Axis")
plt.ylabel("Y-Axis")

plt.title("Loving the Colors")

plt.show()




#Bar Chart
import matplotlib.pyplot as plt
#X-coord for left sides of bars
left = [1,2,3,4,5]

#Height of bars
height = [10,24,36,40,5]

#Tick Labels for bars
tick_label = ["Food", "Tuition", "Rent", "Starbucks", "Savings"]

plt.bar(left, height, tick_label = tick_label, width = 0.75,
color = ['red', 'blue'])
plt.xlabel("Grady's Motnhly Purchases")
plt.ylabel("Dollars (in thousands)")
 
plt.title("Monthly Budget")
 
plt.show()





#Plot with subplot
import matplotlib.pyplot as plt
import numpy as np

#Our Functions
t = np.arange(0.0, 10.0, 0.01)
s = 1 + np.sin(5* np.pi *t)
fig, ax = plt.subplots()
ax.plot(t,s)
ax.set(xlabel="time(s)", ylabel = "Voltage (mV)", 
title = 'Power Factor')

ax.grid()

fig.savefig("test.png")
plt.show()